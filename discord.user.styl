/* ==UserStyle==
@name         Dark Discord
@namespace    gitlab.com/vednoc/dark-discord
@version      0.14.0
@description  Customizable dark theme for Discord.
@author       vednoc
@homepageURL  https://gitlab.com/vednoc/dark-discord
@supportURL   https://gitlab.com/vednoc/dark-discord/issues
@updateURL    https://gitlab.com/vednoc/dark-discord/raw/master/discord.user.styl
@preprocessor stylus

@var checkbox remove_notifications "Notification-free mode" 0
@var checkbox min_guilds "Minimize width of guild area" 0
@var checkbox smol_guild "Minimize height of guild icons" 0
@var text guild_size "Custom small guild icon size" 40px
@var checkbox mid_guilds "Small guild icons" 0
@var checkbox paddingless_cozy "Remove padding for cozy messages" 0
@var checkbox compact_cozy "Compact mode for cozy messages" 0
@var checkbox compact_lines "Compact mode visual lines" 0
@var checkbox unified_header "WIP: Make the header transparent" 0
@var checkbox disable_images "WIP: Disable images and show their links" 0
@var checkbox scrollbars_enabled "Always show scrollbar tracks" 0
@var checkbox scrollbars_chromium "Disable scrollbars in Chromium" 0
@var checkbox scrollbars_firefox "Disable scrollbars in Firefox" 0
@var checkbox msg_options "Highlight message by hovering over buttons" 0
@var checkbox hideCarousel "Hide carousel from activity page" 0
@var checkbox hideNews "Hide news from activity page" 0
@var text code_font "Custom font for code blocks" ""font-name""
@var text input_height "Input bar maximum height" 140px
@var text b_radius "Custom border radius" 5px

@var color dark    "Dark color.   " #222222
@var color darker  "Darker color. " #2f2f2f
@var color light   "Light color.  " #d1d1d1
@var color lighter "Lighter color." #c9c9c9
@var color icon    "Icon color.   " #e1e1e1
@var color accent  "Accent color. " #7289da
@var color yellow  "Yellow color. " #f0c674
@var color orange  "Orange color. " #de935f
@var color red     "Red color.    " #a54242
@var color magenta "Magenta color." #b294bb
@var color violet  "Violet color. " #85678f
@var color blue    "Blue color.   " #5f819d
@var color cyan    "Cyan color.   " #5e8d87
@var color green   "Green color.  " #8c9440
@var color shadow  "Shadow color. " #00000020

==/UserStyle== */

@-moz-document domain("discordapp.com") {
  :root {
    --note    : "Dark-Discord v0.14.0";
    --dark    : dark;
    --darker  : darker;
    --light   : light;
    --lighter : lighter;
    --accent  : accent;
    --icon    : icon;
    --shadow  : shadow;
    --bshadow : 0 2px 3px 0 var(--shadow);
    --yellow  : yellow;
    --orange  : orange;
    --red     : red;
    --magenta : magenta;
    --violet  : violet;
    --blue    : blue;
    --cyan    : cyan;
    --green   : green;
    --t       : transparent !important;
    --radius  : b_radius;
    --textarea: input_height;
    --codearea: code_font;
  }

  // * Use stylus-lang variables with CSS variables.
  // TODO try to make this more compact.
  $dark    = var(--dark);
  $darker  = var(--darker);
  $light   = var(--light);
  $lighter = var(--lighter);
  $accent  = var(--accent);
  $icon    = var(--icon);
  $shadow  = var(--shadow);
  $bshadow = var(--box-shadow);
  $yellow  = var(--yellow);
  $orange  = var(--orange);
  $red     = var(--red);
  $magenta = var(--magenta);
  $violet  = var(--violet);
  $blue    = var(--blue);
  $cyan    = var(--cyan);
  $green   = var(--green);
  $t       = var(--t);
  $radius  = var(--radius);

  // * Color mixin.
  // ? All colors -> colors: $light, $darker, $dark;
  // ? Only background-color -> colors: 0, 0, $dark;
  colors(x, y, z) {
    if x is a 'call' { color: x !important; }
    if y is a 'call' { border-color: y !important; }
    if z is a 'call' { background-color: z !important; }
  }

  // * Compact_lines helper mixins.
  line(x, y) {
    content: "";
    position: absolute;
    if x != false { border-left: 2px solid $darker; }
    if y != false { border-bottom: 2px solid $darker; }
  }
  size(w, h) {
    if w != 'boolean' { width: w; }
    if h != 'boolean' { height: h; }
  }
  nav(a, b, c, d) {
    if a != 'boolean' || a != 'null' { top: a; }
    if b != 'boolean' || b != 'null' { right: b; }
    if c != 'boolean' || c != 'null' { bottom: c; }
    if d != 'boolean' || d != 'null' { left: d; }
  }

  // * Login page.
  [class*="authBox-"] {
    colors: $lighter, $darker, $dark;
    box-shadow: 0 2px 10px 2px $shadow;
    [class*="title-"] { colors: $light, 0, 0; }
    [class*="subTitle-"] { colors: $lighter, 0, 0; }
  }

  // * Icons.
  svg path[class*="attachButtonPlus-"],
  svg[name="Gear"] path[fill="currentColor"],
  svg[class*="icon"] path[fill="currentColor"],
  svg[class*="icon"] g[fill="currentColor"] > path,
  svg[class*="icon"] path[fill^="#FFF"] {
    fill: $lighter !important;
  }
  svg[class*="button"] path[stroke="#FFF"] {
    stroke: $lighter !important;
  }

  // * Userstyle version.
  [class*="userSettingsAccount"] > h2::after {
    content: " | Theme: " var(--note);
    text-transform: initial;
  }

  // * Global reset/overwrites.
  ::placeholder, [class*="emptyPlaceholder"] { colors: $lighter, 0, 0; }
  ::selection { colors: $dark, 0, $lighter; }
  ::-moz-selection { colors: $dark, 0, $lighter; }
  // Bot tags.
  [class*="botTag"] { colors: $light, 0, $accent; }

  // * No channel. (=
  [class*="noChannel-"] { colors: 0, 0, $dark; }

  // * Modal backdrop.
  [class^="backdrop"] {
    opacity: 0.80 !important;
    colors: 0, 0, $dark;
  }

  // * Chromium scrollbars.
  if not scrollbars_chromium {
    [class^="chat"], [class*="friends"] {
      ::-webkit-scrollbar {
        &-track { colors: 0, 0, $dark; }
        &-track-piece { colors: 0, $dark, $shadow; }
        &-thumb { colors: 0, $dark, $darker; }
      }
    }
    [class*="emojiPicker-"] {
      ::-webkit-scrollbar {
        &-track { colors: 0, 0, $dark; }
        &-track-piece { colors: 0, 0, 0; }
        &-thumb { colors: 0, $darker, $accent; }
      }
    }
  }

  // * Firefox scrollbar polyfill.
  if not scrollbars_firefox {
    // ? Activity/Store/Friends/QuickSwitcher/Channels/Chat.
    [class*="feed-"] +, [class*="Store-"] +,
    [class*="friendsTableBody-"] +,
    [class*="quickswitcher-"],
    [class*="scrollerFade-"] >,
    [class*="messages-"] + {
      [class^="scrollbar-"] {
        colors: 0, $t, $dark;
        [class^="track"] { colors: 0, $dark, $darker; }
        [class^="thumb"] { colors: 0, $dark, $accent; }
        [class^="pad"] { colors: 0, 0, $dark; }
      }
    }
    // ? Search/Pinned/Notifications.
    [class*="searchResultsWrap-"] > div:last-child,
    [class*="messagesPopout-"] +,
    [class*="sizeMedium-"] {
      [class*="scrollbar-"] {
        colors: 0, $t, $darker;
        [class^="track"] { colors: 0, $darker, $dark; }
        [class^="thumb"] { colors: 0, $darker, $accent; }
        [class^="pad"] { colors: 0, 0, $darker; }
      }
    }
    // ? Various hacks.
    [class*="scrollbar-"] {
      // ? Custom setting -> Always show scrollbar tracks.
      if ( scrollbars_enabled == 1 ) {
        > [class*="track-"] { opacity: 1 !important; }
      }
      // ? Hide 0px height thumb scrollbar thumb.
      > div[style*="height: 0px;"] { border-width: 0px !important; }
    }
    // ? Remove unnecessary padding throughout the app.
    [class*="scrollerWrapPolyfill-"] > [class*="systemPad-"] {
      padding-right: 2px !important;
    }
  }

  // * Dirty Firefox sidebar(s) hacks.
  @supports (-moz-user-select: none) {
    // .scrollerWrap-2lJEkd { margin-right: -24px !important; }
    [class*="directionColumn"][class*="firefoxFixScrollFlex"] { overflow: hidden; }
    // ? Fixes input element in *fox-based browsers.
    [class*="channelTextArea-"] textarea[class*="textArea-"] {
      margin: 0; padding: 0 10px;
      // ? Center input text on the first row of text.
      &[style*="height: auto"], &[style*="height: 21px"] {
        padding-top: 10px;
        margin: 1px 0 -3px;
      }
      // ? Reset padding whenever there are two or more rows of text.
      &:not([style*="height: auto"]) { padding: 10px; }
    }
  }

  // * Modals.
  [class*="modal-"] {
    &[class*="sizeSmall-"] {
      colors: 0, 0, $darker;
      box-shadow: 0 0 0 1px $shadow, 0 2px 10px 0 $shadow;
    }
    &[class*="sizeMedium-"] {
      colors: 0, 0, $darker;
      box-shadow: 0 0 0 1px $dark, 0 2px 10px 0 $shadow;
    }
    // Default-ish colors.
    [class*="primary-"] { colors: $light, 0, 0; }
    [class*="titleDefault-"], [class*="h5-"] { colors: $light, 0, 0; }
    [class*="description-"], [class*="guildName-"] { colors: $lighter, 0, 0; }
    // Footer.
    [class*="footer-"] {
      colors: 0, 0, $shadow;
      box-shadow: inset 0 1px 0 0 $shadow;
    }
    // Highlighted friends.
    [class*="friend-"] { colors: $light, 0, 0; }
    [class*="friendSelected-"] { colors: 0, 0, $dark; }
    .search-bar {
      colors: 0, 0, $t;
      &-inner { colors: 0, $shadow, $dark; }
      &-tag { colors: $lighter, 0, $darker; }
      input { colors: $light, 0, 0; }
    }
    // Text color.
    [class*="defaultColor"] { colors: $light, 0, 0; }
    [class*="Header"], [class*="header-"] { colors: $lighter, 0, 0; }
    // Spotify invitation.
    [class*="partyStatus"] {
      colors: $lighter, 0, 0;
      [class*="textLink"] { colors: $light, 0, 0; }
    }
  }

  // * Upload modal.
  [class*="uploadModal-"] {
    colors: 0, 0, $dark;
    box-shadow: inset 0 0 0 2px $darker;
    [class*="inner-"] {
      colors: $lighter, $darker, 0;
      // Different file-types.
      [class*="file-"] [class*="icon-"] {
        &[class*="image-"] {
          colors: 0, $darker, $dark;
          box-shadow: 0 2px 8px 0 $shadow !important;
        }
        &[class*="unknown-"], &[class*="code-"],
        &[class*="document-"], &[class*="video-"] {
          filter: invert(0.8) hue-rotate(180deg);
        }
        // File title.
        + [class*="description"] { colors: $light, 0, 0; }
      }
    }
    // ? Controls.
    [class*="footer-"] {
      colors: 0, 0, $darker;
      box-shadow: inset 0 1px 0 0 $darker;
      // Cancel button.
      [class*="lookLink-"] {
        colors: $lighter, 0, 0;
        &:hover [class*="contents-"] {
          background-image: none;
          box-shadow: inset 0 -1px 0 0 $accent;
        }
      }
      // Upload button.
      [class*="lookInverted-"] {
        transition: 0.2s ease;
        colors: $lighter, 0, $dark;
        &:hover { filter: opacity(0.8); }
      }
    }
  }

  // * Channel info modal.
  [class*="inner-"] > [class*="modal-"][class*="size-"] {
    colors: $light, 0, $darker;
    box-shadow: 0 2px 10px 0 $shadow, 0 0 0 1px $dark;
    // Close icon.
    [class*="close-"] { color: $lighter, 0, 0; }
    // Text color.
    [class*="content-"] > [class*="primary-"] { color: $lighter, 0, 0; }
  }

  // * User modal.
  [class^="modal-"] > div > [class*="root"] {
    [class*="header-"] > [class*="Info"] {
      [class*="username"] { colors: $light, 0, 0; }
      [class*="discriminator"] { colors: $lighter, 0, 0; }
      // Send friend request button.
      & + [class*="lookInverted"] {
        colors: $green, 0, $dark;
        transition: 0.2s ease-in-out;
        &:hover { colors: $light, 0, 0; }
      }
    }
    // * Activities.
    [class*="Spotify-"] {
      colors: 0, 0, $darker;
      [class^="headerFill-"] {
        border-top: 1px solid;
        colors: 0, $shadow, $t;
      }
      // Text colors.
      [class*="content-"], [class*="TextNormal-"] { colors: $lighter, 0, 0; }
      [class*="weight"] { colors: $lighter, 0, 0; }
      [class*="lookOutlined-"] { colors: $lighter, $dark, 0; }
      [class*="listenAlongIcon-"] path { fill: $lighter; }
      [class*="activityName-"] { colors: $light, 0, 0; }
      // Progress bar.
      [class*="bar-"] {
        colors: 0, 0, $dark;
        [class*="barInner-"] { colors: 0, 0, $accent; }
      }
    }
    [class*="Playing-"] {
      colors: 0, 0, $darker;
      [class*="headerFill-"] { colors: 0, 0, $t; }
      [class*="content-"] { colors: $lighter, 0, 0; }
      [class*="lookOutlined-"] { colors: $lighter, $dark, $dark; }
      [class*="headerText-"], [class*="activityName-"] { colors: $light, 0, 0; }
    }
    [class*="topSectionNormal-"] {
      colors: 0, 0, $darker;
    }
    // * Tab bar.
    [class^="tabBar"] {
      colors: 0, $darker, $t;
      [class*="item-"] {
        transition: 0.15s ease;
        colors: $lighter, 0, 0;
        &:hover { colors: 0, $accent, 0; }
        &[class*="selected-"] { colors: $light, $accent, 0; }
      }
    }
    // * Body.
    > [class*="body-"] {
      border-top: 1px solid $darker;
      colors: 0, 0, $t;
      // Text color.
      [class*="Info"] { colors: $lighter, 0, 0; }
      [class*="note"] > textarea {
        colors: $light, 0, 0;
        &:focus { colors: 0, 0, $darker; }
      }
      // ? Mutual servers/friends.
      [class*="listRow-"] {
        colors: $lighter, 0, 0;
        &:hover { colors: $light, 0, $darker; }
        [class*="guildNick-"] { colors: $lighter, 0, 0; }
        [class*="discriminator"] { colors: $light, 0, 0; }
      }
      // ? Reset misaligned elements due to Firefox polyfill.
      [class*="firefoxFixScrollFlex-"] {
        padding-right: 0px;
        [class*="userInfoSection-"] { margin-right: 16px; }
      }
    }
    // * Connected accounts.
    [class*="userInfoSection"] {
      colors: 0, $darker, 0;
      [class*="Accounts"] > [class*="Account"] {
        border-radius: $radius;
        colors: 0, $darker, $dark;
        &:hover [class*="AccountName"] { colors: $light, 0, 0; }
        [class*="AccountName"] {
          transition: 0.15s ease;
          colors: $lighter, 0, 0;
        }
      }
    }
  }

  // * Global popout borders.
  [class*="popouts-"] {
    > [class*="popout-"], [class*="userPopout-"] {
      border-radius: $radius !important;
      box-shadow: 0 0 0 1px $darker, 0 2px 4px -1px $shadow;
    }
  }

  // * Popout menus.
  // ? For example: Spotify invitation/Upload a File/etc.
  [class*="popouts-"] [class*="attachPopout-"] {
    border-radius: $radius;
    colors: $light, 0, $dark;
    // Text color.
    [class*="RowText"] { colors: $lighter, 0, 0; }
    // On hover event.
    > [class*="attachPopoutRow"]:hover {
      colors: 0, 0, $darker;
      [class*="RowText"] { colors: $light, 0, 0; }
    }
  }

  // * Add role popout.
  [class*="popoutInvert-"], [class*="popoutBottom-"] {
    [class*="headerText-"] { colors: $light, 0, 0; }
    [class*="sectionTag-"] {
      colors: $lighter, 0, $t;
      [class*="selected-"] {
        background: linear-gradient(90deg, $t, $darker);
      }
    }
  }

  // * User popout.
  [class*="userPopout"] {
    colors: 0, 0, $dark;
    // Username/discriminator colors.
    [class^="headerText-"] {
      [class*="Name"] { colors: $light, 0, 0; }
      [class*="Tag"] { colors: $lighter, 0, 0; }
    }
    // * Different modes.
    // TODO Should we include different colors?
    [class*="header-"] {
      border-radius: $radius $radius 0 0;
      colors: 0, 0, $t;
      [class*="content-"] { colors: $lighter, 0, 0; }
      [class*="lookOutlined-"] { colors: $lighter, $dark, $dark; }
      [class*="headerText-"], [class*="activityName-"] { colors: $light, 0, 0; }
      // Activity.
      [class*="activityUserPopout"] {
        border-top: 1px solid $darker;
        colors: 0, 0, $t;
      }
    }
    [class*="Spotify"] {
      // Text colors.
      [class*="content-"], [class*="TextNormal-"] { colors: $lighter, 0, 0; }
      [class*="weight"] { colors: $lighter, 0, 0; }
      [class*="lookOutlined-"] { colors: $lighter, $darker, 0; }
      [class*="listenAlongIcon-"] path { fill: $lighter; }
      [class*="activityName-"] { colors: $light, 0, 0; }
      // Progress bar.
      [class*="bar-"] {
        colors: 0, 0, $darker;
        [class*="barInner-"] { colors: 0, 0, $accent; }
      }
    }
    // * Body.
    > [class^="body-"] {
      border-top: 1px solid;
      colors: $lighter, $darker, $t;
      // Headers.
      [class*="bodyTitle"] { colors: $lighter, 0, 0; }
      // Add role button.
      [class*="actionButton"] { colors: $lighter, $lighter, $darker; }
      // Note section.
      [class*="note"] > textarea {
        colors: $lighter, 0, 0;
        &:focus { colors: $light, 0, $dark; }
      }
    }
    // * Footer.
    > [class^="footer-"] {
      colors: $light, $shadow, $t;
      // Wumpus!
      [class*="wumpusShown-"] [class*="wumpusTooltip-"] {
        colors: $lighter, 0, $dark;
        &::after { border-color: $t $dark $t $t; }
      }
      // Tip color.
      [class*="tip"] { colors: $lighter, 0, 0; }
      // Message $user.
      [class*="quickMessage"] { colors: $light, $dark, $dark; }
    }
  }

  // * User status menu.
  [class^="menu"] {
    colors: $light, 0, $dark;
    border-radius: inset !important;
    [class^="item"] {
      colors: $light, 0, 0;
      &:hover { colors: $light, 0, $darker; }
      [class*="helper-"] { colors: $lighter, 0, 0; }
    }
  }

  // * User controls.
  [class^="channels"][class*="vertical"] > div:last-child {
    border-top: 1px solid;
    colors: $lighter, $darker, $t;
    [class^="username"] { colors: $light, 0, 0; }
    [class*="discriminator"] { opacity: 0.6; colors: $lighter, 0, 0; }
  }

  // * User status.
  [class*="online-"] { colors: 0, $dark, $green; }
  [class*="idle-"] { colors: 0, $dark, $orange; }
  [class*="dnd-"] { colors: 0, $dark, $red; }
  [class*="offline-"] { colors: 0, $dark, 0; }
  [class*="invisible-"] { colors: 0, $dark, 0; }
  [class*="unknown-"] { colors: 0, $dark, 0; }

  // * Text status.
  [class*="statusGreen"], [style$="(67\, 181\, 129);"] { colors: $green, 0, 0; }
  [class*="statusOrange"], [style$="(250\, 166\, 26);"] { colors: $orange, 0, 0; }
  [class*="statusRed"], [style$="(240\, 71\, 71);"] { colors: $red, 0, 0; }
  [class*="statusYellow"] { colors: $yellow, 0, 0; }
  [class*="titleChecked"], [class*="descChecked"] { colors: $light, 0, 0; }

  // * Loading page.
  [class^="app"] > [style^="opacity"] {
    // Background.
    &[class*="fixClipping"] { colors: 0, 0, $dark; }
    // Text colors.
    [class^="quote-"] { colors: $light, 0, 0; }
    [class^="status-"] { colors: $lighter, 0, 0; }
    [class*="problems-"] {
      [class*="Text"] { colors: $lighter, 0, 0; }
      [class*="anchor"] { colors: $accent, 0, 0; }
    }
  }

  // * Skeleton/crashed page.
  [class*="appMount-"] > [class*="themeDark-"] {
    colors: 0, 0, $dark;
    [class*="text-"] > h4 { colors: $light, 0, 0; }
    [class*="note-"] { colors: $lighter, 0, 0; }
  }

  // ? All usernames except the ones that have custom colors.
  [class^="username"]:not([style^="color"]) { colors: $lighter, 0, 0; }
  // ? Default no-role color in right sidebar.
  [class^="nameTag"]:not([style^="color"]) { colors: $lighter, 0, 0; }
  // ? Inherit custom color in right sidebar.
  [class*="nameTag"] > [class*="username"] { color: inherit !important; }

  // * Guilds.
  [class*="layer-"] > div[style="flex: 1 1 auto;"] > [class*="wrapper-"] {
    border-right: 1px solid;
    colors: 0, $darker, $dark;
    [class*="downloadAppButton-"] { display: none !important; }
    [class^="friendsOnline"], [class^="download"] { colors: $lighter, 0, 0; }
    [class*="Separator"]::after { colors: 0, 0, $darker; }

    // * Guild wrapper.
    [class*="container-"] {
      // ? Indicator -> New messages.
      &[class*="unread"]::before { colors: 0, 0, $lighter; }
      // ? Indicator -> Active guild.
      &[class*="selected-"]::before { colors: 0, 0, $accent; }
      // ? Unread messages.
      [class*="badge-"] {
        colors: $dark, 0, $accent;
        box-shadow: 2px 2px 0 0 $darker;
      }
      // ? Home icon above guilds.
      > [class*="homeButton-"][class*="wrapper-"] {
        transition-duration: 0.15s !important;
        colors: 0, 0, $t;
        box-shadow: 0 0 0 1px inset $darker;
        [class*="homeIcon"] { colors: $light, 0, 0; }
        // ? Colors when active.
        &[style$="rgb(114\, 137\, 218);"] {
          colors: 0, 0, $darker;
          [class*="homeIcon"] { colors: $accent, 0, 0; }
        }
      }
      // ? Guild colors.
      [class*="dragfix-"] > [class*="wrapper-"] {
        colors: $lighter, 0, $t;
        box-shadow: 0 0 0 1px inset $darker;
        [class*="Icon-"] {
          transition: 0.15s ease;
          background-size: cover;
          colors: $lighter, 0, $t;
          &:hover { colors: $light, 0, $darker; }
        }
      }
      // ? Add/Join a new server.
      + [class=""] > [class*="circleIcon"] { colors: $lighter, $darker, $dark; }
    }
    [class*="unreadMentionsBar-"] {
      colors: $dark, 0, $accent;
      box-shadow: 2px 2px 0 0 $darker;
      transition: 0.2s ease;
      svg { colors: $dark, 0, 0; }
      &:hover { opacity: 0.8; }
    }

    // * Minimize width of guild area.
    if min_guilds {
      transition: 0.3s cubic-bezier(0, 0, 0.2, 1);
      transition-delay: 0.5s;
      max-width: 10px;
      &:hover { max-width: 70px; }
    }

    // * Minimize height of guild icons.
    if smol_guild {
      $height = 30px;
      [class*="container-"] {
        max-height: $height;
        // ? Set channel border-radius and height.
        [class*="dragfix-"] > [class*="wrapper"], [class*="homeButton-"] {
          height: $height;
          border-radius: ($height / 2) !important;
          a { height: $height; }
          // ? Guild image height.
          a [class*="icon"], a [class*="inner-"][class*="inner-"] {
            line-height: $height;
            height: $height;
          }
        }
        // ? Badges.
        [class*="badge-"] { top: ($height - 16px) !important; }
        // ? Special DM selectors. xd
        [class*="wrapper-"][style*="border-radius:"] {
          colors: 0, 0, $t;
          box-shadow: 0 0 0 1px inset $darker;
          height: $height;
          border-radius: ($height / 2) !important;
          [class*="avatar-"] { height: $height; }
          [class*="inner-"] {
            margin-top: -10px;
            padding: 10px 0;
            background-image: cover !important;
          }
        }
        // ? Resize Discord logo because it shrinks down.
        svg[class*="homeIcon-"] { transform: scale(1.5); }
        // ? Join/Create a new server.
        + div[class=""] > [class*="circleIconButton"] {
          height: $height;
          line-height: $height;
          border-radius: ($height / 2);
          [class*="plus"] {
            line-height: $height;
            font-size: 2em;
          }
        }
        // ? Separate DMs from guilds.
        &[style*="height:"] { margin-bottom: 10px; }
      }
    }
  }

  // * Search results.
  [class*="popout-"] > [class*="container-"] {
    colors: $red, 0, $dark;
    // * "Search for" selector.
    > [class*="queryContainer-"] {
      colors: $light, $dark, $darker;
      // Text colors.
      [class*="queryText-"] { colors: $lighter, 0, 0; }
      [class*="queryText-"] strong { colors: $light, 0, 0; }
      // Shortcut button.
      [class*="queryShortcut-"] [class*="keybindShortcut-"] span {
        colors: $light, $dark, $darker;
        box-shadow: inset 0 -4px 0 $accent;
      }
    }
    // Text color.
    [class*="header-"] { colors: $lighter, 0, 0; }
    [class*="searchLearnMore-"] [class*="anchor-"],
    [class*="plusIcon-"] { colors: $lighter, 0, 0; }
    // * Items.
    [class*="option"] {
      // Remove gradient.
      &::after { display: none; }
      // On event.
      &:hover, &[class*="selected-"] { colors: 0, 0, $darker; }
      // Text color.
      > strong { colors: $accent, 0, 0; }
      [class*="filter-"] { colors: $light, 0, 0; }
      [class*="nonText-"] { colors: $lighter, 0, 0; }
      [class*="displayedNick-"] { colors: $light, 0, 0; }
      [class*="answer-"], [class*="displayUsername-"] {
        opacity: 0.6;
        colors: $lighter, 0, 0;
      }
      [class*="resultChannel-"] {
        strong { colors: $accent, 0, 0; }
        span, svg { colors: $lighter, 0, 0; }
      }
    }
  }

  // * Calendar.
  [class*="datePicker-"] > div > div {
    colors: $lighter, 0, $dark;
    [class*="__navigation"] { colors: 0, $darker, 0; }
    // * Month/year header.
    [class*="__header"] {
      colors: $lighter, 0, $t;
      [class*="__current-month"] { colors: $light, $darker, 0; }
      [class*="__day-name"] { colors: $lighter, 0, 0; }
    }
    // * Days.
    [aria-label^="day-"] {
      colors: $light, $darker, $dark;
      // ? Select *only* days that are in the past.
      &:hover:not([class*="disabled"]) { colors: $light, 0, $accent; }
    }
    [class*="__day--outside-month"], [class*="__day--disabled"] {
      opacity: 0.6;
      colors: $lighter, $darker, $darker;
    }
    [class*="__day--today"] {
      colors: $light, 0, 0;
      &::after { colors: 0, 0, $accent; }
    }
  }
  // * Hints.
  [class*="datePicker-"] [class*="datePickerHint-"] {
    margin: 0;
    padding: 20px;
    colors: 0, $dark, $darker;
    span { colors: $lighter, 0, 0; }
    [class*="hintValue-"] {
      padding: 0 4px;
      colors: $light, 0, $accent;
    }
  }

  // * Main area.
  [class*="base"] {
    // ? Make guild channels have transparent background.
    > [class*="spacer"] > [class*="channels"] > [class*="noWrap"] {
      colors: 0, 0, $t;
    }

    // * Friends list.
    [class*="friendsTable-"] {
      margin-top: 0px; // TODO Remove when fixed on upstream.
      colors: 0, 0, $dark;
      [class*="friendsTableHeader-"] {
        colors: 0, $darker, 0;
        [class*="friendsColumn-"] { colors: $lighter, 0, 0; }
        [class*="ColumnSeparator-"] { colors: 0, 0, $darker; }
      }
      [class*="friendsTableBody-"] {
        colors: 0, $shadow, 0;
        [class*="friendsColumn-"] { colors: $lighter, 0, 0; }
        [class*="statusText-"] { colors: $light, 0, 0; }
        [class*="noIcon-"] { colors: $light, 0, $darker; }
        [class*="friendsRow"] { border-color: $darker; }
        [class*="friendsRow-"]:hover {
          colors: 0, 0, $darker;
          box-shadow: 0 2px 4px 0 $shadow !important;
        }
      }
    }

    // ? Header in friends area.
    [class*="headerBar-"] {
      colors: 0, 0, $dark;
      box-shadow: 0 1px 0 0 $darker !important;
      [class*="tabBar-"] {
        colors: 0, $shadow, $t;
        [class*="itemDefault-"]:not([class*="primary-"]) {
          colors: $lighter, 0, 0;
          transition: 0.2s ease;
          &:hover { colors: $light, 0, $darker; }
        }
        [class*="selected-"] { colors: $accent, 0, $t; }
        [class*="primary-"] { colors: 0, 0, $accent; }
      }
    }

    // ? Global channels.
    [class*="channels"] {
      border-right: 1px solid;
      colors: 0, $darker, $dark;

      // ? Guild name/menu.
      [class*="hasDropdown-"] > [class*="header-"] {
        colors: $light, 0, 0;
        box-shadow: 0 1px 0 0 $darker;
        &:hover { colors: 0, 0, $darker; }
      }

      // ? Remove unnecessary shadow on notification bar.
      [class*="positionedContainer-"] > [class*="unreadTop-"] > div {
        box-shadow: none !important;
      }

      // Notices.
      [class*="channelNotice-"] {
        colors: 0, 0, $dark;
        box-shadow: 0 -1px 0 0 inset $darker;
        [class*="message-"] {
          colors: $lighter, 0, 0;
          [class*="btn-"] {
            transition: 0.15s ease;
            colors: $lighter, $darker, $dark;
            &:hover { colors: $light, 0, $darker; }
          }
        }
      }

      // Selected channel.
      [class*="contentSelected"], [class*="contentHovered"] {
        colors: 0, 0, $darker;
        [class*="Text-"] { colors: $light, 0, 0; }
        svg path { fill: $light !important; }
      }
      // Channel containers.
      [class*="containerDefault-"] {
        // Defaults.
        [class*="nameDefault-"] { colors: $light, 0, 0; }
        // Text/voice channels.
        [class*="contentDefault"] > div {
          opacity: 0.6;
          colors: $lighter, 0, 0;
        }
        // Unread messages.
        [class*="unread-"] { colors: 0, 0, $accent; }
        [class*="contentUnreadText"] > div { colors: $accent, 0, 0; }
        // Collapsed containers.
        [class*="Collapsed-"] {
          colors: $lighter, 0, 0;
          &:hover { colors: $light, 0, 0; }
        }
        // Muted containers.
        [class*="Muted-"] {
          opacity: 0.6;
          colors: $lighter, 0, 0;
        }
        // Hovered containers.
        [class*="nameHovered"] { colors: $light, 0, 0; }
      }

      // ? Reset scroller padding so it takes less space.
      [class*="scrollerWrapPolyfill"] > [class^="scroller-"] {
        padding: 0 8px 0 0 !important;
      }
    }

    // * Guild members list.
    [class*="membersWrap-"] [class*="members-"] {
      border-left: 1px solid $darker;
      colors: 0, 0, $dark;
      [class*="membersGroup-"] { opacity: 0.8; colors: $light, 0, 0; }
      [class*="activityText-"] { colors: $lighter, 0, 0; }
      [class*="member"][class*="-open"], [class*="member-"]:hover {
        border-radius: $radius;
        [class*="content-"] { colors: 0, 0, $darker; }
        [class*="status-"] { colors: 0, $darker, 0; }
      }
    }

    // * Search bar.
    [class*="privateChannels-"] > [class*="searchBar-"] {
      border-bottom: 1px solid $darker;
      box-shadow: none;
      // Wrapper element.
      [class*="searchBarComponent-"] { colors: $t, $t, $t; }
      // The actual search bar.
      [class*="searchBarInner-"] {
        border-radius: $radius;
        colors: $lighter, $darker, $dark;
        box-shadow: 0 2px 4px 0 $shadow;
      }
    }

    // * Search bar in guilds, groups and DMs.
    [class*="search-"] {
      > [class*="searchBar-"] {
        width: auto;
        min-width: 144px;
        border-radius: $radius;
        transition: min-width 0.2s ease-in-out 0.1s;
      }
      // ? On event.
      &[class*="focused"] {
        > [class*="searchBar-"][class*="searchBar-"] {
          min-width: 240px;
          colors: 0, 0, $darker;
          box-shadow: 0 2px 8px 1px $shadow;
        }
      }
      // ? Some magic for placeholder text.
      [class*="Placeholder"]:not([class*="hasFocus"]) {
        opacity: 0.6;
        colors: $lighter, 0, 0;
      }
      & + [class*="divider-"] {
        opacity: 0.2;
        colors: 0, 0, $lighter;
      }
    }

    // * Chat section.
    [class*="chat"] {
      colors: 0, 0, $dark;

      // ? Channel title-bar.
      > [class^="titleWrapper"] > [class*="title"] {
        colors: 0, 0, $dark;
        box-shadow: 0 1px 0 0 $darker !important;
        [class*="channelName-"] { colors: $light, 0, 0; }
        [class*="channelIcon-"], [class*="topic-"] { colors: $lighter, 0, 0; }
        [class*="topic-"] {
          // Separator
          &::before { colors: 0, 0, $darker; }
          // Nicknames in guilds.
          [class*="aka-"] {
            colors: $accent, 0, $dark;
            box-shadow: 0 0 0 1px $darker;
          }
        }
      }

      // ? Title-bar search messages.
      [class*="search-"] [class*="searchBar-"] {
        colors: $lighter, 0, $dark;
        box-shadow: inset 0 0 0 1px $darker;
        // Input text color.
        [class*="DraftEditor-"] {
          colors: $lighter, 0, 0;
        }
        // Blocks.
        [class*="searchFilter-"], [class*="searchAnswer"] {
          colors: $light, 0, $darker;
        }
      }

      // ? Group DM header.
      [class*="groupDM-"] [class*="input-"] {
        colors: $light, 0, 0;
        input[class*="input-"]:focus { colors: 0, 0, $dark; }
      }

      // ? Welcome section.
      [class*="welcomeMessage-"] {
        h1, strong { colors: $light, 0, 0; }
        p { colors: $lighter, 0, 0; }
        a { colors: $accent, 0, 0; }
      }

      // ? Load more messages bar.
      [class*="hasMore-"] button {
        colors: $lighter, $darker, $darker;
        box-shadow: 0 2px 8px -2px $shadow;
        transition: 0.2s ease;
        &:hover {
          colors: $light, 0, 0;
          box-shadow: 0 4px 8px 0px $shadow;
        }
      }

      // ? New messages.
      [class*="newMessagesBar-"] {
        background-image: linear-gradient(90deg, $t -400%, $accent);
        colors: $lighter, 0, $t;
        button { colors: $lighter, 0, 0; }
      }

      // * Spinners.
      [class*="spinner-"] {
        // Loading messages.
        [class*="wanderingCubesItem-"] { colors: 0, 0, $accent; }
        // Someone is typing.
        [class*="pulsingEllipsisItem-"] { colors: 0, 0, $light; }
      }

      // ? Transparentize extra elements.
      // ! Careful with this; might need to be removed.
      > div {
        colors: 0, 0, $t;
        // ? Messages/input form container.
        [class^="messagesWrapper"] {
          colors: 0, 0, $t;
          & + form { colors: 0, 0, $t; }

          // ? LocalBot messages.
          [class*="isLocalBot-"] {
            colors: $lighter, $green, $dark;
            background-image: linear-gradient(60deg, $t 50%, $darker);
            box-shadow: 0 0 0 1px $darker;
            [class*="localBotMessage-"] a { colors: $accent, 0, 0; }
          }
        }
        // ? Group welcome message.
        [class*="messages-"] [class*="default-"] h1 {
          colors: $lighter, 0, 0;
          strong { colors: $light, 0, 0; }
        }
        // ? Guild/group user greeters.
        [class*="container-"] > [class*="content-"] {
          colors: $lighter, 0, 0;
          a {
            font-weight: bold;
            colors: $light, 0, 0;
          }
          time {
            opacity: 0.6;
            colors: $lighter, 0, 0;
          }
        }
      }

      // * Messages.
      [class*="message-"] {
        // ? Style all but the ones that don't have OnHover class.
        [class*="timestampCompact"]:not([class*="OnHover"]) {
          opacity: 0.5;
          colors: $lighter, 0, 0;
        }
        // ? Apply styles regardless of class on every hover event.
        &:hover [class*="timestampCompact"] {
          opacity: 1;
          colors: $light, 0, 0;
        }
        [class*="timestampCozy-"] {
          opacity: 0.5;
          colors: $light, 0, 0;
        }
        [class*="edited-"] { colors: $lighter, 0, 0; }
        [class^="markup-"] {
          colors: $light, 0, 0;
          a { colors: $accent, 0, 0; }
        }
        [class*="operations"] {
          colors: $lighter, 0, 0;
          a { colors: $light, 0, 0; }
        }

        // ? Reactions.
        [class*="reactions-"] > [class*="reaction-"] {
          colors: 0, 0, $darker;
          &[class*="reactionMe-"] {
            background-image: linear-gradient(90deg, $accent -200%, $t 300%);
            [class*="reactionCount-"] { colors: $light, 0, 0; }
          }
          [class*="reactionCount-"] { colors: $lighter, 0, 0; }
        }

        // ? Message separators; sibling of message-* selectors.
        if msg_options {
          [class*="buttonContainer"]:hover + [class^="markup"] {
            colors: 0, 0, $darker;
          }
        }
      }

      // * Mentions.
      [class*="markup-"] [class*="mention"] {
        colors: $accent, 0, $t;
        &:hover { text-decoration: underline; }
      }

      // * Mention bar.
      [class*="isMentioned"] {
        position: relative;
        colors: 0, 0, $t;
        &::before {
          opacity: 0.2;
          z-index: -1;
          content: ""; position: absolute;
          top: 0; right: 0; bottom: 0; left: 0;
          border-radius: 0 3px 3px 0;
          colors: 0, 0, $accent;
        }
        &::after {
          opacity: 0.6;
          left: -4px;
          colors: 0, $accent, $t;
        }
      }

      // ? Message dividers.
      [class*="divider-"] {
        // Base styles.
        > [class*="dividerContent-"] {
          line-height: 10px;
          colors: $lighter, 0, 0;
          &::before, &::after { colors: 0, $darker, 0; }
        }
        // New messages.
        &[class*="dividerRed-"] > [class*="Content-"] {
          colors: $red, 0, 0;
          &::before, &::after { colors: 0, $red, 0; }
        }
      }

      // * Invite embed.
      [class*="wrapper-"][class*="userSelectNone"] {
        colors: 0, $darker, $dark;
        box-shadow: 0 2px 4px 0 $shadow;
        [class*="title-"], [class*="guildDetail-"] { colors: $lighter, 0, 0; }
        [class*="guildName-"] { colors: $light, 0, 0; }
        [class*="statusOnline-"] { colors: 0, 0, $green; }
        [class*="statusOffline-"] { colors: 0, 0, $darker; }
        [class*="lookOutlined-"] { colors: 0, $darker, 0; }
      }

      // * Typing section.
      [class^="typing"] {
        colors: $light, 0, $t;
        [class^="text"], [class^="cooldownWrapper"] { colors: $lighter, 0, 0; }
        [class^="text"] strong { colors: $light, 0, 0; }
      }

      // * Voice/video calls.
      [class^="video"] {
        colors: 0, 0, $dark;
        box-shadow: 0 8px 16px 0 $shadow;
      }
    }
  }

  // * Input section.
  [class^="channelTextArea"] {
    colors: 0, $darker, 0;
    // Input container.
    > [class^="inner"] {
      colors: 0, 0, $dark;
      border-radius: $radius;
      border: 1px solid $darker;
      &[class*="innerAutocomplete-"] { border-radius: 0 0 $radius $radius; }
    }
    // Input text color.
    textarea { colors: $light, 0, 0; }
    // Dividers.
    [class*="divider"], [class*="Divider"] { colors: 0, 0, $darker; }
    // ? Emojis, mentions, commands popout.
    [class*="autocomplete-"][class*="autocomplete-"] {
      margin-bottom: -1px;
      colors: 0, 0, $dark;
      border-radius: $radius $radius 0 0;
      box-shadow: 0 0px 0 1px $darker;
      [class*="autocompleteInner-"] {
        border: none !important;
        // Command mode icons.
        [class*="iconForeground"] { fill: $icon; }
        // Title/description selectors.
        [class*="Title"], [class*="description"] { colors: $lighter, 0, 0; }
        [class*="contentTitle"] strong { colors: $light, 0, 0; }
        // Main content.
        [class*="content-"] { colors: $light, 0, 0; }
        [class*="selectorSelected-"] { colors: 0, 0, $darker; }
      }
    }
  }

  // * Embeds.
  [class^="embedInner"] {
    colors: $light, $darker, $darker;
    // Descriptions and such.
    [class*="Provider-"], [class*="Description-"] {
      colors: $lighter, 0, 0;
      a { colors: $accent, 0, 0; }
    }
    // Fields.
    [class*="Field-"] {
      [class*="FieldName-"] { colors: $light, 0, 0; }
      [class*="FieldValue-"] { colors: $lighter, 0, 0; }
    }
    // Titles.
    [class*="Title-"], [class*="AuthorName-"] { colors: $light, 0, 0; }
    // Links.
    [class*="TitleLink-"] { colors: $accent, 0, 0; }
  }
  // ? Left bar color; we don't want to overwrite it.
  // [class^="embedPill"] { colors: 0, 0, $accent; }

  // * Emote menu.
  [class*="emojiPicker-"] {
    colors: $red, $darker, $darker;
    box-shadow: 0 0 6px 0 var(--shadow);
    // Header.
    [class*="searchBar-"] {
      colors: 0, 0, $t; // not necessary?
      [class*="searchBarInner-"] { colors: $lighter, 0, $dark; }
      [class*="searchBarInner-"] input { colors: $light, 0, 0; }
    }
    // Frequently used.
    [class*="stickyHeader-"] { colors: 0, 0, $darker; }
    [class*="category-"], [class*="sadImage-"] + div { colors: $lighter, 0, 0; }
    // Selected emote.
    [class*="row-"] [class*="selected-"] { colors: 0, 0, $accent; }
    // Selected category.
    [class*="categories-"] [class*="selected-"] { colors: 0, $accent, 0; }
    // Dimmed overlay.
    [class*="visible-"]:not([class*="icon-"] ) {
      opacity: 0.8;
      colors: 0, 0, $darker;
    }
    // Diversity selector.
    [class*="popout-"] {
      padding: 2px;
      colors: 0, $dark, $darker;
    }
    // ? Fix scrollbar polyfill.
    [class*="scrollbar-"] > [class*="pad"] {
      left: -2px !important;
      colors: 0, 0, $darker;
    }
  }

  // * Store page.
  [class^="applicationStore-"] {
    colors: 0, 0, $dark;
    [class*="headerBar-"] {
      colors: 0, 0, $dark;
      box-shadow: 0 1px 0 0 $darker;
      [class*="title-"] { colors: $light, 0, 0; }
    }
    // * Header.
    [class*="premiumApplicationsHeader-"],
    [class*="distributionApplicationsActions-"] {
      colors: $light, $darker, 0;
      [class*="viewAllGames-"] { colors: $light, 0, 0; }
      [class*="announcing"] { font-weight: bold !important; colors: $red, 0, 0; }
    }
    [class*="button-"][class*="lookOutlined-"][class*="colorWhite-"] {
      colors: $light, $darker, 0;
      &:hover { colors: 0, 0, $darker; }
    }
    // Links.
    [class*="announcing"] { colors: $accent, 0, 0; }
    [class*="tilePrice-"] {
      [class*="originalAmount-"] { colors: $lighter, 0, 0; }
    }
    // "First on Discord" deals.
    [class*="gameTitle-"] { colors: $light, 0, 0; }
    [class*="tagline-"] { colors: $lighter, 0, 0; }
    [class*="priceOSSection-"] { colors: $light, 0, 0; }
    // ? "First on Discord" cards.
    [class*="tileWrapper-"] {
      > [class*="tileMedia-"][class*="tile-"] {
        colors: 0, 0, $dark;
        &:hover { box-shadow: 0 9px 20px 0 $shadow; }
        > figure[class*="splashContainer-"] { colors: 0, 0, $t; }
        > dif[class*="mediaFade-"] {
          background: linear-gradient(180deg, $t 90%, $darker);
        }
        [class*="description-"] {
          background: linear-gradient(180deg, $t, $darker 45%, $darker);
        }
        [class*="tag-"] {
          background-image: linear-gradient(90deg, $accent, $darker);
          &::before { filter: grayscale(100%) opacity(0.2); }
        }
      }
    }
    // ? Other cards.
    [class*="applicationTile-"] {
      transition: background-color 0.2s ease, box-shadow 0.2s ease;
      &:hover { box-shadow: 0 9px 20px 0 $shadow; }
    }
  }

  // * Shared pages.
  [class^="activityFeed-"], [class^="gameLibrary-"] {
    colors: 0, 0, $dark;
    [class*="headerBar-"] {
      colors: 0, 0, $dark;
      box-shadow: 0 1px 0 0 $darker !important;
      [class*="title-"] { colors: $light, 0, 0; }
    }
    [class*="emptyStateText-"] {
      [class*="Header-"] { colors: $light, 0, 0; }
      [class*="Description-"] { colors: $lighter, 0, 0; }
    }
  }

  // * Activity page.
  [class^="activityFeed-"] {
    [class*="card-"] {
      box-shadow: 0 2px 8px -1px $shadow;
      [class*="header-"] { colors: 0, 0, $dark; }
      [class*="cardBody-"] { colors: 0, 0, $darker; }
      // News, announcements, videos.
      [class*="news-"] {
        colors: 0, 0, $darker;
        [class*="title-"] { colors: $light, 0, 0; }
        [class*="subtitle-"], [class*="description-"] {
          opacity: 0.6;
          colors: $light, 0, 0;
        }
      }
      // Text colors.
      [class*="username-"] { colors: $light, 0, 0; }
      [class*="discriminator-"] { colors: $lighter, 0, 0; }
      [class*="Title-"], [class*="playTime-"] { colors: $lighter, 0, 0; }
    }
    [class*="title-"] { colors: $light, 0, 0; }
    [class*="article-"] {
      colors: 0, 0, $darker;
      [class*="background-"] {
        -webkit-mask: linear-gradient(0deg, $t, $dark 150%);
        mask: linear-gradient(0deg, $t, $dark 150%);
      }
    }
  }

  // * Tab bar.
  #friends .tab-bar {
    .tab-bar-item:not(.tab-bar-item-primary) {
      colors: $lighter, 0, 0;
      &.selected, &:hover { colors: $light, 0, $dark; }
    }
    .tab-bar-separator { colors: 0, 0, $shadow; }
  }

  // * Private channels.
  [class^="privateChannels-"] {
    // Headers.
    header { opacity: 0.5; colors: $light, 0, 0; }
    // Channel related styles.
    [class^="channel-"] {
      colors: $light, 0, 0;
      // Usernames.
      a, [class^="name-"] {
        border-radius: $radius;
        colors: $lighter, 0, 0;
      }
      // ? Text colors.
      [class^="name-"] {
        opacity: 0.6;
        // Activities.
        > [class*="activity"] { colors: $lighter, 0, 0; }
      }
      // ? Different states.
      &:hover, &[class*="selected-"] {
        a { colors: 0, 0, $darker; }
        [class*="name-"] { opacity: 1; }
        [class*="status-"] { colors: 0, $darker, 0; }
      }
    }
    // ? Reset scroller padding so it takes less space.
    [class*="scrollerWrapPolyfill"] > [class^="scroller-"] {
      padding: 0 8px 0 0 !important;
    }
  }

  // * Search results.
  [class*="searchResultsWrap-"] {
    colors: 0, 0, $darker;
    [class*="searchHeader-"] {
      colors: 0, 0, $darker;
      box-shadow: 0 1px 0 0 $dark !important;
      // Text color.
      [class*="tab-"], [class*="totalResults-"] {
        opacity: 0.6;
        colors: $lighter, 0, 0;
      }
      [class*="tab-"][class*="selected-"] {
        opacity: 1;
        colors: $light, $accent, 0;
      }
    }
    [class*="resultsWrapper-"] {
      // Name and separator.
      [class*="channelSeparator-"] {
        &::before { colors: 0, $dark, 0; }
        [class*="channelName-"] { colors: $lighter, 0, $darker; }
      }
      // Single result.
      [class*="searchResult-"] {
        // Remove unnecessary gradients.
        &::before, &::after { background: none !important; }
        // Matching message.
        [class*="hit"] {
          border-radius: $radius;
          colors: 0, $dark, $dark;
          box-shadow: 0 0 30px 6px $darker;
         }
      }
      // Pages.
      [class*="pagination-"] { colors: $lighter, 0, 0; }
    }
  }

  // * Gifted Nitro wrapper.
  [class*="applicationTile-"] {
    colors: 0, 0, $darker;
    box-shadow: 0 0 0 $shadow;
    [class*="description-"] {
      colors: $lighter, 0, 0;
      [class*="gameTitle-"] { colors: $light, 0, 0; }
      [class*="tagline-"], [class*="metadata-"] { colors: $lighter, 0, 0; }
    }
  }

  // * Code blocks.
  [class*="markup-"] {
    pre {
      border-radius: $radius;
      colors: $light, $darker, $darker;
    }
    code, code[class*="inline"] {
      border-radius: $radius;
      colors: $light, 0, $darker;
      box-shadow: 2px 2px 8px -2px $shadow;
      font-family: var(--codearea), Consolas, Liberation Mono, Menlo, Courier, monospace;
    }
    // Syntax highlighting.
    .hljs {
      &-name, &-title, &-section { colors: $blue, 0, 0; }
      &-selector-class, &-selector-id { colors: $blue, 0, 0; }
      &-attr, &-attribute, &-type { colors: $orange, 0, 0; }
      &-class, &-template-variable, &-variable { colors: $orange, 0, 0; }
      &-built_in, &-deletion { colors: $red, 0, 0; }
      &-doctag, &-literal, &-meta &-meta-string { colors: $cyan, 0, 0; }
      &-number, &-regexp, &-string { colors: $cyan, 0, 0; }
      &-addition, &-keyword, &-selector-tag { colors: $green, 0, 0; }
      &-comment, &-quote { colors: $light, 0, 0; }
    }
  }

  // * QuickSwitcher.
  [class*="quickswitcher"] {
    colors: $light, 0, $dark;
    box-shadow: 0 8px 16px 0 $shadow;
    [class*="input"] {
      padding: 16px;
      height: unset;
      line-height: unset;
      colors: $light, 0, $darker;
      box-shadow: 0 4px 8px 0 $shadow;
    }
    [class*="match"], [class*="header"] { colors: $accent, 0, 0; }
    [class*="header"], [class*="username"] { colors: $light, 0, 0; }
    [class*="tips"], [class*="content"], [class*="note"] { colors: $lighter, 0, 0; }
    [class*="icon"] { colors: $icon, 0, 0; }
    // Unread messages badge.
    [class*="badge-"] {
      colors: $dark, 0, $accent;
      box-shadow: 2px 2px 0 0 $darker;
    }
    // Highlighted channel.
    [class*="resultFocused-"] {
      border-radius: $radius;
      colors: 0, 0, $darker;
    }
    // Keybinds.
    [class*="keybindShortcut-"] span {
      colors: $lighter, $darker, $dark;
      box-shadow: inset 0 -4px 0 $darker;
      [class*="bindArrow-"] > g { fill: $lighter; }
    }
  }

  // TODO: Find a better place to put this.
  [class^="itemGroup"] {
    [class^="item"] {
    colors: $light, $dark, $dark;
    &:hover { colors: $light, 0, $darker; }
    }
  }
  [class^="contextMenu"] { colors: $light, $dark, $dark; box-shadow: $bshadow; }
  .checkbox .checkbox-inner input[type="checkbox"]:checked + span { colors: 0, $accent, $accent; }

  // * ReactSelect dropdown.
  .Select {
    &-control { colors: $lighter, $darker, $dark; }
    &-value-label { colors: $lighter, 0, 0; }
  }

  // * Mentions.
  [class^="messagesPopoutWrap-"] {
    border-radius: $radius;
    colors: $light, $darker, $dark;
    [class^="header-"]:not([class^="headerCozy"]) {
      colors: $light, $darker, $dark;
      box-shadow: 0 1px 0 0 $darker;
      [class*="title-"] { colors: $lighter, 0, 0; }
      // ? Tabs.
      // TODO: Refactor this since it's a global component.
      [class^="tabBar"] {
        colors: 0, $shadow, $t;
        [class*="tabBarItem"] { colors: $lighter, 0, 0; }
        [class*="tabBarItem"]:hover { colors: 0, $accent, 0; }
        [class*="selected"] { colors: $light, $accent, 0; }
      }
      // ? Filters.
      [class*="mentionFilter-"] {
        [class*="label"] { colors: $lighter, 0, 0; }
        [class*="value-"] {
          colors: $light, 0, 0;
          font-weight: bold;
        }
      }
    }
    [class*="channelSeparator-"] {
      [class*="channel"] { colors: $light, 0, 0; }
      [class*="guild"] { colors: $lighter, 0, 0; }
    }
    [class^="messageGroupWrapper"] { colors: $light, $darker, $dark; }
    [class^="jumpButton"] { colors: $light, $t, $darker; }
    [class^="actionButtons"] {
      transition: none !important;
      colors: $light, $t, $t;
      box-shadow: none !important;
    }
    [class*="emptyPlaceholder-"] [class*="body-"] { colors: $lighter, 0, 0; }
    [class*="footer-"][class*="footer-"] {
      colors: 0, 0, $dark;
      [class*="tip-"] { colors: $lighter, 0, 0; }
    }
  }

  // * Settings.
  [class*="standardSidebarView-"] {
    colors: 0, 0, $dark;
    // * Sidebar.
    [class^="sidebarRegion-"] {
      colors: $light, 0, $dark;
      [class*="separator-"] { colors: 0, 0, $darker; }
      [class^="header-"] { opacity: 0.5; colors: $lighter, 0, 0; }
      [class^="itemSelected-"] { colors: $light, 0, $accent; }
      [class*="itemDefault-"]:hover { colors: $light, 0, $darker; }
      [class^="itemDefault-"], [class^="itemHover-"] { colors: $lighter, 0, 0; }
    }
    // * Main content.
    [class^="contentRegion-"] {
      colors: $light, 0, $dark;
      box-shadow: 1px 0 0 0 inset $darker;
      // Text colors.
      [class*="titleDefault-"], [class*="title-"] { colors: $lighter, 0, 0; }
      [class*="description-"] {
        colors: $light, 0, 0;
        [class*="anchor-"] { colors: $accent, 0, 0; }
      }
      [class*="divider-"] { colors: 0, 0, $darker; }
      [class*="value-label-"] { colors: $light, 0, 0; }
    }
    // Close button.
    [class*="closeButton-"] {
      colors: 0, $darker, 0;
      transition: 0.2s ease;
      &:hover { colors: 0, 0, $darker; }
      path[fill*="#dcddde"] { fill: $lighter; }
      + [class*="keybind"] { colors: $lighter, 0, 0; }
    }
    // * Audit log.
    [class*="auditLog-"] {
      colors: $lighter, $darker, 0;
      // Different headers.
      [class*="headerClickable"] { colors: $lighter, 0, $dark; }
      [class*="headerExpanded"] { colors: $lighter, 0, $darker; }
      // Text colors.
      [class*="userHook-"] {
        strong, > span:first-child, { colors: $light, 0, 0; }
      }
      // Metadata.
      [class*="changeStr-"], [class*="timeWrap-"] {
        &, strong { colors: $light, 0, 0; }
      }
      // Discriminators and secondary text.
      [class*="discrim-"], [class*="timestamp-"] {
        opacity: 1;
        colors: $lighter, 0, 0;
      }
      // Colors.
      [class*="typeUpdate-"] { colors: $yellow, 0, 0; }
      [class*="typeCreate-"] { colors: $green, 0, 0; }
      [class*="typeDelete-"] { colors: $red, 0, 0; }
    }
  }

  // * Emoji section.
  [class*="emojiRow-"] {
    &::before { colors: 0, $shadow, $dark; }
    // Text color.
    [class*="emojiAliasPlaceholder-"] {
      colors: $lighter, 0, 0;
      &::before, &::after { colors: $light, 0, 0; }
    }
    [class*="emojiRowText-"] { colors: $light, 0, 0; }
    // Input fields.
    input {
      transition: 0.2s ease !important;
      colors: $lighter, $darker, $dark;
      &:hover, &:focus { colors: $light, 0, $darker; }
    }
  }

  // * Cards.
  [class*="card-"]:not([class*="emojiRow-"]) {
    colors: 0, $darker, $darker;
    [class*="title-"], [class*="primary-"] { colors: $light, 0, 0; }
    [class*="desc-"] { colors: $lighter, 0, 0; }
    [class*="anchor-"] { colors: $accent, 0, 0; }
    [class*="checkbox-"] {
      colors: 0, $dark, 0;
      &[class*="checked-"] { colors: 0, 0, $dark; }
    }
    // Checkmarks.
    [name*="Checkmark"] polyline[stroke*="#7289da"] { stroke: $accent; }
    // Colorized cards.
    &[style*="rgb(67"] { colors: 0, $green, $green; }
    &[style*="rgb(250"] { colors: 0, $orange, $orange; }
    &[style*="rgb(240"] { colors: 0, $red, $red; }
  }
  // * Username and such.
  [class*="cardPrimary"] {
    colors: $light, $dark, $dark;
    input {
      colors: $lighter, $dark, $dark;
      &:focus { colors: $light, $accent, 0; }
    }
    [class*="viewBody-"] { colors: $light, 0, 0; }
  }
  [class*="faded"] { color: $light !important; opacity: .5; }
  [class*="colorPrimary"] { colors: $light, 0, 0; }

  // * Buttons.
  [class*="lookFilled"] {
    colors: $lighter, $accent, $accent;
    transition: all 0.15s ease-in-out;
    &[class*="colorGreen"] { colors: $light, $green, $green; }
    &[disabled] { colors: $light, $darker, $darker; }
    &:hover { opacity: 0.8 !important; }
  }

  // * Check slider.
  [class*="valueChecked"] { colors: $lighter, 0, $accent; }

  if hideCarousel {
    [class*="carousel"] { display: none !important; }
  }
  if hideNews {
    [class*="card"][class*="card"] {
      [class*="cardBody"] > div:last-child { display: none !important; }
    }
  }

  // * Deprecated elements.
  .form.deprecated {
    .header {
      colors: 0, 0, $dark;
      h1 { colors: $light, 0, 0; }
      input[type=text] {
        colors: $lighter, $darker, $darker;
        box-shadow: 0 2px 1px 0 $shadow !important;
      }
    }
    .form-inner { colors: 0, 0, $darker; }
    .footer { colors: $lighter, $shadow, $darker; }
    a { colors: $accent, 0, 0; }
  }
  // * Create/join another server.
  [class*="animator-"][class*="fixClipping-"] {
    colors: 0, 0, $t;
    [class*="modal-"][class*="slide-"][class*="size-"] {
      colors: 0, 0, $darker;
      box-shadow: 0 2px 8px -1px $shadow !important;
      [class*="action-"] {
        background: none !important;
        colors: 0, $shadow, $dark;
        box-shadow: 0 2px 8px 0 $shadow;
      }
      [class*="actionBody-"] { colors: $lighter, 0, 0; }
      [class*="or-"] { background-image: none !important; }
    }
  }

  // * Input bar max-height setting.
  [class*="channelTextArea-"] textarea[class*="textArea-"] {
    max-height: var(--textarea);
  }

  // * Padding-less cozy messages.
  // ? Removes excess top and bottom padding from cozy messagas.
  if paddingless_cozy {
    [class*="containerCozyBounded-"] {
      padding: 0;
      > [class*="messageCozy-"] { margin: 4px 0; }
      [class*="avatar-"] { margin-top: 0px; }
      [class*="divider"] { margin: 0 20px; }
    }
    // Mentions.
    [class*="messageGroupWrapperOffsetCorrection-"] {
      margin: -10px 0px -10px -20px !important;
    }
  }

  // * Compact cozy messages.
  // ? Kinda like compact mode but with avatars.
  if compact_cozy {
    [class*="containerCozyBounded-"] {
      padding: 0px 10px 0px 10px;
      // Fix divider.
      [class*="divider"] { margin: auto 10px !important; }
      // Avatars.
      [class*="avatar-"] {
        margin: 1px 4px 0 8px;
        height: auto; width: auto;
        [class*="image-"] { height: 16px; width: 16px; }
      }
      // Message content.
      [class*="contentCozy-"] {
        margin-left: 12px;
        // Default message arrows.
        if not compact_lines {
          [class*="markup-"]::before {
            opacity: 0.25;
            content: "⤷ ";
          }
        }
        // Big emoji!
        .emoji.jumboable { height: 1.35rem; width: 1.35rem; }
        // Reactions.
        [class*="reactions-"] { margin-top: 0; margin-left: 12px; }
      }
    }
    // Mentions.
    [class*="messageGroupWrapperOffsetCorrection-"] {
      margin: -5px 0px -5px -22px !important;
    }
  }

  // * Smaller guild icons.
  if mid_guilds {
    $size = guild_size;
    // ? Set the width of guilds wrapper.
    [class*="layer-"] > div > [class*="wrapper-"] {
      width: ($size + 20px);
      // ? Increase width to account for scrollbar polyfill.
      > [class*="Polyfill-"] { width: ($size + 38px); }
      // ? Online friends and separators.
      [class*="friendsOnline-"], [class*="guildSeparator-"] {
        width: auto;
        margin-left: 0;
        max-width: $size;
        overflow: hidden;
      }
    }
    // * Guilds wrapper.
    [class*="layer-"] [class*="wrapper-"] > div > div > [class*="container-"] {
      margin-bottom: 10px;
      height: $size !important;
      width: $size !important;
      // ? Selected guild.
      &[class*="selected-"]::before {
        margin-top: ($size / -3.5);
        height: ($size / 1.75);
        colors: 0, 0, $lighter;
      }
      // ? Guild icons.
      [class*="dragfix-"], [class*="avatar-"] {
        height: $size;
        width: $size;
        // ? Set icon sizes.
        a, a > [class*="icon-"], [class*="inner-"] {
          height: $size;
          width: $size;
        }
        // ? Guilds without icons.
        [class*="noIcon"] { line-height: $size; }
      }
      // ? Home button.
      [class*="homeButton-"] {
        height: $size;
        width: $size;
      }
      // ? Badges.
      [class*="badge-"] { top: ($size - 16px) !important; }
      // ? Join/Create a new server.
      + div[class=""] [class*="circleIconButton"] {
        height: $size;
        width: $size;
        line-height: $size;
        [class*="plus"] {
          line-height: $size;
          font-size: 2em;
        }
      }
    }
  }

  // * Replace images with their links.
  if disable_images {
    [class*="imageZoom-"] {
      height: auto !important;
      width: auto !important;
      &::after {
        color: $lighter;
        content: "URL: " attr(href);
      }
      img { display: none; }
    }
  }

  // * Unified header.
  if unified_header {
    // * Transparetinze title bar.
    [class*="chat-"] > [class*="titleWrapper-"] {
      > [class*="title"][class*="headerBar"] {
        colors: 0, 0, $t;
        box-shadow: 0 1px 0 0 $darker !important;
      }
    }
    // ? Pseudo background for members section.
    [class*="searchResultsWrap-"]::before {
      content: "";
      position: absolute;
      top: -48px; right: 0; left: 0;
      height: 48px;
      colors: 0, 0, $darker;
    }
    // Fix upstream hidding the overflow.
    [class*="searchResultsWrap-"] { overflow: visible; }
    // ? Background should take over the header.
    // TODO: Move to a separate background option perhaps?
    [class*="content-"] > [class*="spacer-"][class*="vertical-"] {
      // overflow: visible;
      // Account for the height of the title bar.
      &::before { top: -50px; }
    }
  }

  // * Compact mode lines.
  if compact_lines {
    // Fix message buttons issues.
    [class*="buttonContainer-"] + [class*="markup-"] {
      margin-right: 46px;
    }
    [class*="containerCozyBounded-"] {
      // Avatars.
      [class*="avatar-"] {
        z-index: 1;
        box-shadow: 0 0 0 2px $darker;
        &:hover { opacity: 1; }
      }
      // Markup.
      [class*="markup-"] {
        position: relative;
        margin-left: 16px;
        // Straight line.
        &::before {
          nav: 0, false, -10px, -13px;
          line: true, false;
          // colors: 0, $red, 0;
        }
        // Curved line.
        &::after {
          size: 9px, 30px;
          nav: -20px, 0, 0, -13px;
          border-radius: 0 0 0 6px;
          line: true, true;
          // colors: 0, $cyan, 0;
        }
      }
      // Reset for the last pseudo elements.
      > div:nth-last-child(2) [class*="contentCozy-"] {
        // Reset markup and embeds.
        [class*="markup-"], [class*="embed-"] {
          &::before { colors: 0, $t, 0; }
          // &::after { colors: 0, $yellow, 0; }
        }
        // Reset your uploaded image.
        [class*="containerCozy-"] > a[class*="embed"]::before {
          display: none;
          // colors: 0, $red, 0;
        }
        // Reset extra server/gift embeds.
        [class*="containerCozy-"] > [class*="cursorDefault-"]::before {
          display: none;
          // colors: 0, $blue, 0;
        }
      }
      // Images/videos/embeds.
      [class*="containerCozy-"] > [class*="embed-"] {
        margin-left: 16px;
        margin-bottom: 8px;
        &::before {
          nav: 0, 0, -22px, -13px;
          line: true, false;
          // colors: 0, $orange, 0;
        }
      }
      // Your uploaded image embed.
      [class*="containerCozy-"] > a[class*="embed"] {
        overflow: visible;
        margin-left: 15px;
        border-radius: $radius;
        box-shadow: 0 0 0 1px inset $darker;
        // colors: 0, 0, $darker;
        &::before {
          nav: 0, 0, 0, -12px;
          line: true, false;
          // colors: 0, $green, 0;
        }
        img { border-radius: $radius; }
      }
      // Image you sent, no text.
      [class*="containerCozy"] > div[class*="imageWrapper-"] {
        margin-left: 15px;
      }
      // Spotify -> Embedded song.
      [class*="containerCozy"] > div[class*="embedSpotify-"] {
        position: relative;
        margin-left: 15px;
        &::before {
          nav: -20px, 0, 0px, -12px;
          line: true, false;
          colors: 0, $green, 0;
        }
      }
      // Spotify -> Reset visual lines on the last message.
      > [class*="messageCozy-"]:nth-last-child(2) [class*="embedSpotify-"]::before {
        display: none !important;
      }
      // Spotify -> Party invite.
      [class*="containerCozy-"] > [class*="invite-"] {
        position: relative;
        overflow: visible;
        margin-left: 16px;
        &::before {
          nav: 0, 0, 0px, -14px;
          line: true, false;
          // colors: 0, $red, 0;
        }
      }
      // Reactions.
      [class*="containerCozy"] > span[class*="reactions-"] {
        position: relative;
        margin-top: 8px;
        &::before {
          z-index: -1;
          nav: -10px, 0, 0px, -9px;
          line: true, false;
          // colors: 0, $cyan, 0;
        }
      }
      // Spoilers.
      [class*="containerCozy-"] > div[class*="spoilerContainer-"] {
        overflow: visible;
        margin-left: 15px;
        box-shadow: none !important;
        &::before {
          nav: 0, 0, 0, -12px;
          line: true, false;
          // colors: 0, $green, 0;
        }
        // Fix blur overflow.
        [aria-hidden] {
          overflow: hidden;
          border-radius: $radius;
          box-shadow: 2px 2px 4px 0 $shadow;
        }
      }
      // Remove visual lines from the very last message with spoiler.
      > div:nth-last-child(2) [class*="spoilerContainer-"]::before {
        display: none !important;
      }
      // Remove reaction's visual lines from the very last message.
      > [class*="messageCozy-"]:nth-last-child(2) [class*="reactions"]::before {
        display: none !important;
      }
    }
    // Invites.
    [class*="containerCozy-"] > [class*="cursorDefault-"] {
      position: relative;
      margin-left: 16px;
      &::before {
        nav: 0, 0, 0px, -14px;
        line: true, false;
        // colors: 0, $red, 0;
      }
    }
    // Gifts.
    [class*="content-"] > [class*="containerCozy-"][style*="position: relative;"] {
      margin-left: 16px;
      &::before {
        nav: 0, 0, 0px, -13px;
        line: true, false;
        // colors: 0, $red, 0;
      }
    }
  }

  // * Notification-free mode.
  if remove_notifications {
    [class*="wrapper-"] {
      // ? DMs/Mentions/Badges.
      [class*="friendsOnline-"] ~ [class*="container-"][style*="opacity"],
      [class*="unreadMentions"],
      [class*="container-"] [class*="badge-"] {
        display: none;
      }
    }
    [class*="unread-"] [class*="bar-"],
    [class*="contentUnread"] [class*="iconSpacing-"] {
      display: none;
    }
  }
}
